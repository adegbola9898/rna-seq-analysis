Date now = new Date()

/*
 * General Details on config setup:
 * https://www.nextflow.io/docs/latest/google.html
 * https://docs.seqera.io/platform/23.3.0/compute-envs/google-cloud-batch
 */

manifest {
    description = 'Proof of concept of a paired-end RNA-seq pipeline implemented with Nextflow on GCP'
    author = 'admin@samyus.com'
    nextflowVersion = '>=20.07.0'
}

profiles {
    'paired-end-GRCh38' {
        // docker
        docker.enabled = true

        // process
        process.executor = 'google-batch'
        process.machineType = 'n1-highmem-8' // replace if needed
        process.container = 'us-central1-docker.pkg.dev/bioinformatics-406910/my-rnaseq-image/rna-seq@sha256:834ab34a4c4945a1432d9fd3b0056647a736817bc6963faa43d7d57ea32de976'

        // google
        google.project = 'bioinformatics-406910'
        google.region = 'us-central1'

        // params - data
        params.reads = "gs://ncbi-data-prjna227137/*/*_{1,2}_sequence.txt.gz"
        
        // params - annotations
        params.star_index = "gs://ncbi-data-prjna227137/ref"
        params.annotations_gtf = "gs://ncbi-data-prjna227137/Homo_sapiens.GRCh38.110.gtf"
        params.annotations_fasta = "gs://ncbi-data-prjna227137/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa"
        
        // params - bigquery outputs
        params.gene_results_table_id = "bioinformatics-406910.rnaseq_nf_gene_results.gene_results_2023"
        params.isoform_results_table_id = "bioinformatics-406910.rnaseq_nf_isoform_results.isoform_results_2023"
        
        // params - gcs result outputs
        params.gcs_bucket = 'ncbi-data-prjna227137'
        params.timestamp = now.format('yyyyMMdd-HH-mm-ss')
        params.results_dir = "gs://${params.gcs_bucket}/rna_seq_output/${params.timestamp}/results" // replace
        params.trace_dir = "gs://${params.gcs_bucket}/rna_seq_output/${params.timestamp}/pipeline_info" // replace

        // workDir
        workDir = "gs://${params.gcs_bucket}/scratch/${params.timestamp}"

        // timeline
        timeline.enabled = true
        timeline.file = "${params.trace_dir}/${params.timestamp}_timeline.html"

        // report
        report.enabled = true
        report.file = "${params.trace_dir}/${params.timestamp}_report.html"

        // trace
        trace.enabled = true
        trace.file = "${params.trace_dir}/${params.timestamp}_trace.txt"

        // dag
        dag.enabled = true
        dag.file = "${params.trace_dir}/${params.timestamp}_dag.svg"

        // cleanup
        cleanup = true
    }
}

google {
    batch.spot = true
}
process {
    errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
    maxRetries = 5
}







